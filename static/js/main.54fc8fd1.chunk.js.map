{"version":3,"sources":["Calci.js","App.js","reportWebVitals.js","index.js"],"names":["Calci","useState","kg","setKg","cm","setCm","val","setVal","cg","setCg","className","type","onChange","e","centi","target","value","takeCm","placeholder","kilo","takeKg","onClick","toFixed","calculate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAyCeA,MAvCf,WAAkB,IAAD,EAEOC,mBAAS,GAFhB,mBAENC,EAFM,KAEFC,EAFE,OAGOF,mBAAS,GAHhB,mBAGNG,EAHM,KAGFC,EAHE,OAIOJ,mBAAS,GAJhB,mBAINK,EAJM,KAIFC,EAJE,OAKON,mBAAS,GALhB,mBAKNO,EALM,KAKFC,EALE,KA4Bb,OACI,sBAAKC,UAAU,QAAf,UACI,8CACA,gCAAO,oDAAgC,uBAAOC,KAAK,SAASC,SAAU,SAAAC,GAAC,OApBhE,SAACA,GACZ,IAAIC,EAAQD,EAAEE,OAAOC,MAAM,IAC3BX,EAAMS,GAkBuEG,CAAOJ,IAAIK,YAAY,UAAS,uBACzG,gCAAO,oDAAgC,uBAAOP,KAAK,SAASC,SAAU,SAAAC,GAAC,OAzBhE,SAACA,GACZ,IAAIM,EAAON,EAAEE,OAAOC,MACpBb,EAAMgB,GAuBuEC,CAAOP,IAAIK,YAAY,UAAS,uBACzG,wBAAQG,QAAS,kBAlBP,WACd,IAAIL,EAAQd,GAAIE,EAAGA,GAEfK,EADAO,EAAQ,MAAQA,EAAQ,KAClB,SACCA,EAAQ,IAAMA,EAAQ,KACvB,aACAA,EAAQ,KACR,UAEA,eAEVT,EAAOS,EAAMM,QAAQ,IAOIC,IAArB,uBACA,yCAAYf,EAAZ,kBAA+BF,EAA/B,iB,MCoCGkB,MArEf,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,mCACC,sBAAKA,UAAU,OAAf,UACC,gDACA,2HAGA,0HACA,gKACkI,uBADlI,6DAGA,yFAEA,sBAAKA,UAAU,UAAf,UACI,oBAAIA,UAAU,KAAd,uBACI,mDACJ,6BACI,+BACG,uDACA,kDACA,mEAMb,kCACU,cAAC,EAAD,MAGV,iCACE,kCACO,qDACA,+BACI,2CACA,8CAEJ,+BACI,kDACA,iDAEJ,+BACI,oDACA,4CAEJ,+BACI,gDACA,8CAEJ,+BACI,gDACA,iDAEJ,+BACI,8CACA,8CAEJ,+BACI,0CACA,6DCpDJe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54fc8fd1.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction Calci() {\r\n \r\n    const [kg, setKg] = useState(0);\r\n    const [cm, setCm] = useState(0);\r\n    const [val,setVal]= useState(0);\r\n    const [cg, setCg] = useState(0);\r\n  \r\n    const takeKg = (e) =>{\r\n        var kilo = e.target.value;\r\n        setKg(kilo)\r\n    }\r\n    const takeCm = (e) =>{\r\n        var centi = e.target.value/100;\r\n        setCm(centi)\r\n    }\r\n    const calculate = () =>{\r\n        var value = kg/(cm*cm)\r\n        if (value > 18.5 && value < 24.9) {\r\n            setCg('Normal')\r\n        } else if (value > 25 && value < 29.9) {\r\n            setCg('OverWeight')\r\n        } else if(value > 29.9){\r\n            setCg('Obesity')\r\n        }else{\r\n            setCg('UnderWeight')\r\n        }\r\n        setVal(value.toFixed(2));\r\n    }\r\n    return (\r\n        <div className='calci'>\r\n            <h3>Metric Units</h3>\r\n            <label><b>Height (in cm) = </b></label><input type='number' onChange={e=>takeCm(e)} placeholder='...cm'/><br/>\r\n            <label><b>Weight (in kg) = </b></label><input type='number' onChange={e=>takeKg(e)} placeholder='...kg'/><br/>\r\n            <button onClick={()=>calculate()}>Calculate</button>\r\n            <h4>Result {cg} :  Your BMI = {val} kg/m^2</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calci\r\n","import Calci from './Calci';\nimport './App.css';\n \nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n       <div className='info'>\n        <h1>BMI Calculator</h1>\n        <h4>\n            Body mass index, or BMI, is one way a person can check if their weight is healthy or not.\n        </h4>\n        <h5> Body mass index (BMI) is a value derived from the mass (weight) and height of a person.</h5>\n        <h5>\n            The BMI is defined as the body mass divided by the square of the body height, and is universally expressed in units of kg/m^2,<br/> resulting from mass in kilograms and height in metres.\n        </h5>\n        <h4>A high BMI can be an indicator of high body fatness.</h4>\n       </div>\n        <div className='formula'>\n            <h3 className='hd'>Formula :</h3>\n                <h3>BMI = m / (h * h)</h3>\n            <h4>\n                <ul>\n                   <li>BMI = body mass index</li>\n                   <li>m = mass (in kg)</li>\n                   <li>h = height (in meters)</li>\n                </ul>\n            </h4>\n        </div>\n      </header>\n\n      <content>\n                <Calci/>\n      </content>\n\n      <footer>\n        <table>\n               <caption>BMI Categories</caption>\n               <tr>\n                   <th>Category:</th>\n                   <th>BMI range</th>\n               </tr>\n               <tr>\n                   <td>Severe Thinness:</td>\n                   <td>Less than 16</td>\n               </tr>\n               <tr>\n                   <td>Moderate Thinness:</td>\n                   <td>16 - 17</td>\n               </tr>\n               <tr>\n                   <td>Mild Thinness:</td>\n                   <td>17 - 18.5</td>\n               </tr>\n               <tr>\n                   <td>Normal Weight:</td>\n                   <td> 18.5 - 24.9</td>\n               </tr>\n               <tr>\n                   <td>Over Weight:</td>\n                   <td>25 - 29.9</td>\n               </tr>\n               <tr>\n                   <td>Obesity:</td>\n                   <td>30.0 or greater</td>\n               </tr>\n        </table>\n      </footer>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}